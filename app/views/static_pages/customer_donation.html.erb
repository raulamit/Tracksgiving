<div class="container-fluid">
     <div class="row-fluid">
          <div class="row">
               <div class="span2">
                   <%= render :partial => "static_pages/menu" %>
               </div>
               <div class="span9">
               <h2>Customer Donations</h2>              


<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>
<div class="tabbable">
    <ul class="nav nav-tabs">
    <li class="active"><a href="#tab1" data-toggle="tab">Ruby</a></li>
    <li><a href="#tab2" data-toggle="tab">PHP</a></li>
    <li><a href="#tab3" data-toggle="tab">ASP</a></li>
     <li><a href="#tab4" data-toggle="tab">JAVA</a></li>
    </ul>
    <div class="tab-content">
    <div class="tab-pane active" id="tab1">
    <p>I'm in Section 1.</p>
    <pre class="prettyprint linenums pre-scrollable">
<code>




</code>
</pre>
    </div>
    <div class="tab-pane" id="tab2">
    <p>Howdy, I'm in Section 2.</p>
    <pre class="prettyprint linenums pre-scrollable">
<code>




</code>
</pre>
     </div>
      <div class="tab-pane" id="tab3">
    <p>Howdy, I'm in Section 3.</p>
 <pre class="prettyprint linenums pre-scrollable">
<code>
<span><</span><span>%=</span>

Class CustomerDonation
		'	Attributes
		Dim order_id, order_comment, order_payment_trx_details, order_submission_date, order_due_date
		Dim order_ipaddress, order_channel_code
		Dim token, campaign_key, donation_amount, project_id 
		Dim donor_name, donor_email, donor_genre, donor_pan_number, donor_tax_payer
		Dim donor_addressline, donor_country_iso2, donor_state_iso2, donor_city, donor_zipcode
		
		'	Methods of the class CustomerDonation
		Public Default Function Init(order_id, order_comment, order_payment_trx_details, order_submission_date, order_due_date, order_ipaddress, order_channel_code, token, campaign_key, donation_amount, project_id, donor_name, donor_email, donor_genre, donor_pan_number, donor_tax_payer, donor_addressline, donor_country_iso2, donor_state_iso2, donor_city, donor_zipcode)
			Me.order_id = order_id
			Me.order_comment = order_comment
			Me.order_submission_date = order_submission_date
			Me.order_due_date = order_due_date
			Me.order_channel_code = order_channel_code
			Me.order_payment_trx_details = order_payment_trx_details
			Me.token = token
			Me.campaign_key = campaign_key
			Me.donation_amount = donation_amount
			Me.project_id = project_id
			Me.order_ipaddress = order_ipaddress
			Me.donor_name = donor_name
			Me.donor_email = donor_email
			Me.donor_genre = donor_genre
			Me.donor_pan_number = donor_pan_number
			Me.donor_tax_payer = donor_tax_payer
			Me.donor_addressline = donor_addressline
			Me.donor_country_iso2 = donor_country_iso2
			Me.donor_state_iso2 = donor_state_iso2 
			Me.donor_city = donor_city
			Me.donor_zipcode = donor_zipcode
			Set Init = Me
		End Function
		
		Public Function Validate()
			Dim regEx, regEx1
			Set regEx = New RegExp
			Set regEx1 = New RegExp
			regEx.Pattern = "^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w{2,}$"
			regEx1.Pattern = "^[A-Z]{4}[CPHFATBLJG][0-9]{4}[A-Z]{1}$"

			If IsEmpty(order_id) OR IsEmpty(order_comment) OR IsEmpty(order_submission_date) OR IsEmpty(order_due_date) OR IsEmpty(order_channel_code) OR IsEmpty(order_payment_trx_details) OR IsEmpty(token) OR IsEmpty(campaign_key) OR IsEmpty(donation_amount) OR IsEmpty(project_id) Then
				Validate = False
			ElseIf IsEmpty(order_ipaddress) OR IsEmpty(donor_name) OR IsEmpty(donor_email) OR IsEmpty(donor_genre) OR IsEmpty(donor_pan_number) OR IsEmpty(donor_tax_payer) OR IsEmpty(donor_addressline) OR IsEmpty(donor_country_iso2) OR IsEmpty(donor_state_iso2) OR IsEmpty(donor_city) OR IsEmpty(donor_zipcode) Then
				Validate = False
		    	ElseIf regEx.Test(Trim(donor_email)) = False Then
				Validate = False
			ElseIf donor_tax_payer <> "TP_O" AND donor_tax_payer <> "TP_NRI" AND donor_tax_payer <> "TP_RI" Then
				Validate = False
			ElseIf regEx1.Test(Trim(donor_pan_number)) = False AND is_pan_required() Then
				Validate = False
			ElseIf donation_amount <= 0 Then
				Validate = False
			Else
				Validate = True
			End If
		End Function

		Public function Validate_Message()
			Dim error_mess

			Dim regEx, regEx1
			Set regEx = New RegExp
			Set regEx1 = New RegExp
			regEx.Pattern = "^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w{2,}$"
			regEx1.Pattern = "^[A-Z]{4}[CPHFATBLJG][0-9]{4}[A-Z]{1}$"

			error_mess = "The errors are - "
			If IsEmpty(order_id) Then
				error_mess = error_mess & " order_id not set;"
			End If
			If IsEmpty(order_comment) Then
				error_mess = error_mess & " order_comment not set;" 
			End If
			If IsEmpty(order_submission_date) Then
				error_mess = error_mess & " order_submission_date set;" 
			End If
			If IsEmpty(order_due_date) Then
				error_mess = error_mess & " order_due_date not set;" 
			End If
			If IsEmpty(order_channel_code) Then
				error_mess = error_mess & " order_channel_code not set;" 
			End If
			If IsEmpty(order_payment_trx_details) Then
				error_mess = error_mess & " order_payment_trx_details not set;" 
			End If
			If IsEmpty(token) Then
				error_mess = error_mess & " token not set;"
			End If
			If IsEmpty(campaign_key) Then
				error_mess = error_mess & " campaign_key not set;"
			End If
			If IsEmpty(donation_amount) Then
				error_mess = error_mess & " donation_amount not set;"
			End If
			If IsEmpty(project_id) Then
				error_mess = error_mess & " project_id not set;"
			End If
			If IsEmpty(order_ipaddress) Then
				error_mess = error_mess & " order_ipaddress not set;"
			End If
			If IsEmpty(donor_name) Then
				error_mess = error_mess & " donor_name not set;"
			End If
			If IsEmpty(donor_email) Then
				error_mess = error_mess & " donor_email not set;"
			End If
			If IsEmpty(donor_genre) Then
				error_mess = error_mess & " donor_genre not set;"
			End If
			If IsEmpty(donor_pan_number) Then
				error_mess = error_mess & " donor_pan_number not set;" 
			End If
			If IsEmpty(donor_tax_payer) Then
				error_mess = error_mess & " donor_tax_payer not set;"
			End If
			If IsEmpty(donor_addressline) Then
				error_mess = error_mess & " donor_addressline not set;"
			End If
			If IsEmpty(donor_country_iso2) Then
				error_mess = error_mess & " donor_country_iso2 not set;"
			End If
			If IsEmpty(donor_state_iso2) Then
				error_mess = error_mess & " donor_state_iso2 not set;"
			End If
			If IsEmpty(donor_city) Then
				error_mess = error_mess & " donor_city not set;"
			End If
			If IsEmpty(donor_zipcode) Then
				error_mess = error_mess & " donor_zipcode not set;"
			End If
		    	If regEx.Test(Trim(donor_email)) = False Then
				error_mess = error_mess & " donor_email not valid"
			End If
			If donor_tax_payer <> "TP_O" AND donor_tax_payer <> "TP_NRI" AND donor_tax_payer <> "TP_RI" Then 
				error_mess = error_mess & " donor_tax_payer not valid"
			End If
			If regEx1.Test(Trim(donor_pan_number)) = False AND is_pan_required() Then
					error_mess = error_mess & " donor_pan_number not valid"
			End If
			If donation_amount <= 0 Then
				error_mess = error_mess & " donation amount is negative/zero."
			End If
			
			Set Validate_Message = (New APIResponse)(400, error_mess, "", "", "")
		End Function

		Public Function invoke()
			Dim base_url, xmlobject, response_xml
			
			base_url = "https://secure.tracksgiving.com"

			If Validate() Then
				xmlobject = "<?xml version=""1.0"" encoding=""utf-8""?><span><</span>customer_donation_request><span><</span>order><span><</span>id>" & order_id & "<span><</span>/id><span><</span>comment> & order_comment & <span><</span>/comment><span><</span>payment_trx_details>" & order_payment_trx_details & "<span><</span>/payment_trx_details><span><</span>submission_date>" & order_submission_date & "<span><</span>/submission_date><span><</span>due_date>" & order_due_date & "<span><</span>/due_date><span><</span>ipaddress>" & order_ipaddress & "<span><</span>/ipaddress><span><</span>channel_code>" & order_channel_code & "<span><</span>/channel_code><span><</span>/order><span><</span>donor><span><</span>name>" & donor_name & "<span><</span>/name><span><</span>customer_email>" & donor_email & "<span><</span>/customer_email><span><</span>genre>" & donor_genre & "<span><</span>/genre><span><</span>pan_number>" & donor_pan_number & "<span><</span>/pan_number><span><</span>tax_payer>" & donor_tax_payer & "<span><</span>/tax_payer><span><</span>addressline>" & donor_addressline & "<span><</span>/addressline><span><</span>country_iso2>" & donor_country_iso2 & "<span><</span>/country_iso2><<span><</span>tate_iso2>" & donor_state_iso2 & "<span><</span>/state_iso2><span><</span>city>" & donor_city & "<span><</span>/city><span><</span>zipcode>" & donor_zipcode & "<span><</span>/zipcode><span><</span>/donor><span><</span>donation><span><</span>campaign_key>" & campaign_key & "<span><</span>/campaign_key><span><</span>amount>" & donation_amount & "<span><</span>/amount><span><</span>project_id>" & project_id & "<span><</span>/project_id><span><</span>/donation><span><</span>/customer_donation_request>"

				If (validate_xml(xmlobject, "customer_donation")) Then
					xmlobject = escape(xmlobject)
					response_xml = api_caller(base_url & "/api/v1/customer_donations.xml", "token=" & token & "&xmlobject=" & xmlobject,"POST","xml")
					Set invoke = extract_from_xml(response_xml)
				Else
					Response.Write "XML validation failed.<br>"
					Set invoke = xml_error(xmlobject,"company_donation")
				End If
			Else
				Response.Write "Invalid input.<span><</span>br>"
				Set invoke = Validate_Message()
			End If
		End Function
		
		Public Function is_pan_required()
			If donor_tax_payer = "TP_RI" Then
				is_pan_required = True
			Else
				is_pan_required = False
			End If
		End Function
	End Class %>




</code>
</pre>
     </div>
     <div class="tab-pane" id="tab4">
    <a href="#a">Howdy, I'm in Section 4.</a>

 <pre class="prettyprint linenums pre-scrollable">
<code>

<span><</span><span>?</span><span>xmlversion="1.0" encoding="utf-8"?></span>
<span><</span>xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.0"></span>
	<span><</span><span>xsd:element name="customer_donation_request" type="customer_donation_requestType"/></span>
	<span><</span>xsd:complexType name="customer_donation_requestType">
		<span><</span>xsd:sequence>
			<span><</span>xsd:element name="order" type="orderType" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="donor" type="donorType" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="donation" type="donationType" minOccurs="1" maxOccurs="1"/>
		<span><</span>/xsd:sequence>
	<span><</span>/xsd:complexType>

	<span><</span>xsd:simpleType name="string_min2_max255">
		<span><</span>xsd:restriction base="xsd:string">
			<span><</span>xsd:minLength value="2"/>
			<span><</span>xsd:maxLength value="255"/>
		<span><</span>/xsd:restriction>
	<span><</span>/xsd:simpleType>
	<span><</span>xsd:complexType name="donationType">
		<span><</span>xsd:sequence>
			<span><</span>xsd:element name="campaign_key" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>

			<span><</span>xsd:element name="amount" type="xsd:decimal" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="project_id" type="xsd:integer" minOccurs="1" maxOccurs="1"/>
		<span><</span>/xsd:sequence>
	<span><</span>/xsd:complexType>
	<span><</span>xsd:complexType name="donorType">
		<span><</span>xsd:sequence>
			<span><</span>xsd:element name="name" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="customer_email" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="genre" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>

			<span><</span>xsd:element name="pan_number" type="xsd:string" minOccurs="0" maxOccurs="1"/>
			<span><</span>xsd:element name="tax_payer" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="addressline" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="country_iso2" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="state_iso2" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="city" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="zipcode" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
		<span><</span>/xsd:sequence>
	<span><</span>/xsd:complexType>

	<span><</span>xsd:complexType name="orderType">
		<span><</span>xsd:sequence>
			<span><</span>xsd:element name="id" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="comment" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="payment_trx_details" type="xsd:string" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="submission_date" type="xsd:date" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="due_date" type="xsd:date" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="ipaddress" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>
			<span><</span>xsd:element name="channel_code" type="string_min2_max255" minOccurs="1" maxOccurs="1"/>

		<span><</span>/xsd:sequence>
	<span><</span>/xsd:complexType>
<span><</span>/xsd:schema>


</code>
</pre>

         </div>
    </div>
    

 </div>
<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>

<p>TracksGiving is a young, Mumbai based social enterprise helping businesses cause market. Our first major client is CARE India. They will use TracksGiving to manage their campaigns with corporates.</p>
<h3>Implementations</h3>
</br>
 <%= render :partial => "static_pages/implementation" %>         
          </div>
     </div>
</div>

